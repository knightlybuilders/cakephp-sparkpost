{
  "name": "CakePHP SparkPost",
  "tagline": "SparkPost plugin for CakePHP 3",
  "body": "# SparkPost plugin for CakePHP\r\n\r\n[![Build Status](https://travis-ci.org/narendravaghela/cakephp-sparkpost.svg?branch=master)](https://travis-ci.org/narendravaghela/cakephp-sparkpost)\r\n[![Software License](https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square)](LICENSE)\r\n\r\nThis plugin provides email delivery using [SparkPost](https://www.sparkpost.com/).\r\n\r\n## Requirements\r\n\r\nThis plugin has the following requirements:\r\n\r\n* CakePHP 3.0.0 or greater.\r\n* PHP 5.4.16 or greater.\r\n\r\n## Installation\r\n\r\nYou can install this plugin into your CakePHP application using [composer](http://getcomposer.org).\r\n\r\n```\r\ncomposer require narendravaghela/cakephp-sparkpost\r\n```\r\n\r\nAfter installation, [Load the plugin](http://book.cakephp.org/3.0/en/plugins.html#loading-a-plugin)\r\n```php\r\nPlugin::load('SparkPostEmail');\r\n```\r\nOr, you can load the plugin using the shell command\r\n```sh\r\n$ bin/cake plugin load SparkPostEmail\r\n```\r\n\r\n## Setup\r\n\r\nSet your SparkPost credentials in `EmailTransport` settings in app.php\r\n\r\n```php\r\n'EmailTransport' => [\r\n...\r\n  'sparkpost' => [\r\n      'className' => 'SparkPostEmail.SparkPost',\r\n      'apiKey' => '123456789123456789' // your api key\r\n  ]\r\n]\r\n```\r\n\r\nAnd create new delivery profile for sparkpost in `Email` settings.\r\n\r\n```php\r\n'Email' => [\r\n    'default' => [\r\n        'transport' => 'default',\r\n        'from' => 'you@localhost',\r\n        //'charset' => 'utf-8',\r\n        //'headerCharset' => 'utf-8',\r\n    ],\r\n    'sparkpost' => [\r\n        'transport' => 'sparkpost'\r\n    ]\r\n]\r\n```\r\n\r\n## Usage\r\n\r\nYou can now simply use the CakePHP `Email` to send an email via SparkPost.\r\n\r\n```php\r\n$email = new Email('sparkpost');\r\n$result = $email->from(['foo@example.com' => 'Example Site'])\r\n  ->to('bar@example.com')\r\n  ->subject('Welcome to CakePHP')\r\n  ->template('welcome')\r\n  ->viewVars(['foo' => 'Bar'])\r\n  ->emailFormat('both')\r\n  ->attachments([\r\n      'cake_icon1.png' => Configure::read('App.imageBaseUrl') . 'cake.icon.png',\r\n      'cake_icon2.png' => ['file' => Configure::read('App.imageBaseUrl') . 'cake.icon.png'],\r\n      WWW_ROOT . 'favicon.ico'\r\n  ])\r\n  ->send('Your email content here');\r\n```\r\n\r\nYou can also set custom headers using `ch:` prefix.\r\n\r\n```php\r\n$email = new Email('sparkpost');\r\n$result = $email->from(['foo@example.com' => 'Example Site'])\r\n  ->to('bar@example.com')\r\n  ->addHeaders(['ch:My-Custom-Header' => 'Awesome header string'])\r\n  ->addHeaders(['ch:Another-Custom-Header' => 'Awesome header string'])\r\n  ->emailFormat('both')\r\n  ->attachments([\r\n      'cake_icon1.png' => Configure::read('App.imageBaseUrl') . 'cake.icon.png',\r\n      'cake_icon2.png' => ['file' => Configure::read('App.imageBaseUrl') . 'cake.icon.png'],\r\n      WWW_ROOT . 'favicon.ico'\r\n  ])\r\n  ->send('Your email content here');\r\n```\r\n\r\nYou can set other custom parameters which SparkPost supports using `co:` prefix.\r\n\r\n```php\r\n$email = new Email('sparkpost');\r\n$result = $email->from(['foo@example.com' => 'Example Site'])\r\n  ->to('bar@example.com')\r\n  ->emailFormat('both')\r\n  ->addHeaders(['ch:My-Custom-Header' => 'Awesome header string'])\r\n  ->addHeaders(['co:open_tracking' => true])\r\n  ->addHeaders(['co:click_tracking' => true])\r\n  ->addHeaders(['co:transactional' => true])\r\n  ->addHeaders(['co:metadata' => ['meta1' => 'value1', 'meta2' => 'value2']])\r\n  ->send('Your email content here');\r\n```\r\n\r\nThat is it.\r\n\r\n## Reporting Issues\r\n\r\nIf you have a problem with this plugin or any bug, please open an issue on [GitHub](https://github.com/narendravaghela/cakephp-sparkpost/issues).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}